<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.campus.mapper.base.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.campus.entity.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="publish_datetime" property="publishDatetime" jdbcType="TIMESTAMP" />
    <result column="com_rep_flag" property="comRepFlag" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="quote_id" property="quoteId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.campus.entity.Comment" extends="BaseResultMap" >
    <result column="contents" property="contents" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, publish_datetime, com_rep_flag, user_id, quote_id
  </sql>
  <sql id="Blob_Column_List" >
    contents
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.campus.entity.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.campus.entity.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.campus.entity.CommentExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.campus.entity.Comment" >
    insert into comment (id, publish_datetime, com_rep_flag, 
      user_id, quote_id, contents
      )
    values (#{id,jdbcType=INTEGER}, #{publishDatetime,jdbcType=TIMESTAMP}, #{comRepFlag,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{quoteId,jdbcType=INTEGER}, #{contents,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.campus.entity.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="publishDatetime != null" >
        publish_datetime,
      </if>
      <if test="comRepFlag != null" >
        com_rep_flag,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="quoteId != null" >
        quote_id,
      </if>
      <if test="contents != null" >
        contents,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="publishDatetime != null" >
        #{publishDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="comRepFlag != null" >
        #{comRepFlag,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="quoteId != null" >
        #{quoteId,jdbcType=INTEGER},
      </if>
      <if test="contents != null" >
        #{contents,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.campus.entity.CommentExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.publishDatetime != null" >
        publish_datetime = #{record.publishDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.comRepFlag != null" >
        com_rep_flag = #{record.comRepFlag,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.quoteId != null" >
        quote_id = #{record.quoteId,jdbcType=INTEGER},
      </if>
      <if test="record.contents != null" >
        contents = #{record.contents,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      publish_datetime = #{record.publishDatetime,jdbcType=TIMESTAMP},
      com_rep_flag = #{record.comRepFlag,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      quote_id = #{record.quoteId,jdbcType=INTEGER},
      contents = #{record.contents,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      publish_datetime = #{record.publishDatetime,jdbcType=TIMESTAMP},
      com_rep_flag = #{record.comRepFlag,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      quote_id = #{record.quoteId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.campus.entity.Comment" >
    update comment
    <set >
      <if test="publishDatetime != null" >
        publish_datetime = #{publishDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="comRepFlag != null" >
        com_rep_flag = #{comRepFlag,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="quoteId != null" >
        quote_id = #{quoteId,jdbcType=INTEGER},
      </if>
      <if test="contents != null" >
        contents = #{contents,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.campus.entity.Comment" >
    update comment
    set publish_datetime = #{publishDatetime,jdbcType=TIMESTAMP},
      com_rep_flag = #{comRepFlag,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      quote_id = #{quoteId,jdbcType=INTEGER},
      contents = #{contents,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.campus.entity.Comment" >
    update comment
    set publish_datetime = #{publishDatetime,jdbcType=TIMESTAMP},
      com_rep_flag = #{comRepFlag,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      quote_id = #{quoteId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>